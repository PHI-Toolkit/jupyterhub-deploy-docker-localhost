# Version: 2021-03-21
FROM phitoolkit/notebook-base:latest
ARG JUPYTERHUB_VERSION
ARG JUPYTERLAB_VERSION
ARG NOTEBOOK_VERSION
ARG PLOTLY_VERSION


ENV CONDA_ENVS_PATH=/opt/conda/envs \
    CONDA_PKGS_DIRS=/opt/conda/pkgs \
    CONDA_DIR=/opt/conda

USER ${NB_UID}

RUN \
    pwd && \
    sudo mkdir -p /usr/share/proj && \
    mkdir -p /home/jovyan/install-packages && \
    mkdir -p /home/jovyan/kernel-config-files

COPY work/epsg /usr/share/proj/.

WORKDIR /home/jovyan/work/

COPY *.yaml /home/jovyan/kernel-config-files/.
COPY *.R /home/jovyan/kernel-config-files/.
COPY *.json /home/jovyan/kernel-config-files/.
COPY install-*.sh /home/jovyan/install-packages/.

RUN \
    sudo mv /home/jovyan/kernel-config-files/jupyter_server_config.json /opt/conda/etc/jupyter/jupyter_server_config.d/. && \
    sudo chown "${NB_UID}":"${NB_GID}" ${HOME}/kernel-config-files/*.yaml && \
    sudo chown "${NB_UID}":"${NB_GID}" ${HOME}/kernel-config-files/*.R && \
    sudo chown "${NB_UID}":"${NB_GID}" -R ${HOME}/install-packages/ && \
    sudo chmod a+w -R /home/jovyan/kernel-config-files/ && \
    sudo chmod a+x /home/jovyan/install-packages/*.sh && \
    sudo mkdir -p "${CONDA_DIR}/envs/py3-remote-sensing" && \
    sudo mkdir -p "${CONDA_DIR}/envs/py3-nlp" && \
    sudo mkdir -p "${CONDA_DIR}/envs/r4-base" && \
    sudo chmod a+w -R "${CONDA_DIR}/envs/" && \
    sudo chown "${NB_UID}":"${NB_GID}" -R "${CONDA_DIR}/" && \
    sudo chmod a+w -R /home/jovyan/work/ && \
    sudo chown "${NB_UID}":"${NB_GID}" -R "/home/${NB_USER}/work/" && \
    sudo mkdir -p /usr/local/share/jupyter/ && \
    sudo chown -R "${NB_UID}":"${NB_GID}" /usr/local/share/jupyter/

RUN \
    mamba env update -v -n base -f /home/jovyan/kernel-config-files/py3-base1.yaml && \
    mamba clean --all -f -y && \
    mamba config --set auto_stack 1 && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

RUN \
    mamba env create -v -f /home/jovyan/kernel-config-files/py3-remote-sensing.yaml -p ${CONDA_DIR}/envs/py3-remote-sensing && \
    source activate ${CONDA_DIR}/envs/py3-remote-sensing && \
    mamba list > /home/jovyan/kernel-config-files/py3-remote-sensing.txt && \
    python -m ipykernel install --user --name py3-remote-sensing --display-name "Python3 (RS)" && \
    mamba clean --all -f -y && \
    conda deactivate && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

RUN \
    mamba env create -v -f /home/jovyan/kernel-config-files/py3-nlp.yaml -p ${CONDA_DIR}/envs/py3-nlp && \
    source activate ${CONDA_DIR}/envs/py3-nlp && \
    mamba list > /home/jovyan/kernel-config-files/py3-nlp.txt && \
    python -m ipykernel install --user --name py3-nlp --display-name "Python3 (NLP)" && \
    mamba clean --all -f -y && \
    conda deactivate && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

RUN \
    mamba create -v -y -p ${CONDA_DIR}/envs/r4-base -c r -c anaconda -c conda-forge r-base r-essentials r-irkernel && \
    source activate ${CONDA_DIR}/envs/r4-base && \
    mamba env update -f /home/jovyan/kernel-config-files/r4-base.yaml -p ${CONDA_DIR}/envs/r4-base && \
    Rscript -e "install.packages('devtools',repos = 'http://cran.us.r-project.org')" && \
    Rscript -e "devtools::install_github('IRkernel/IRkernel')" && \
    Rscript -e "IRkernel::installspec(user = TRUE, name = 'r4-base', displayname = 'R 4.1.0')" && \
    conda deactivate && \
    mamba clean --all -f -y && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

RUN \
    # Activate ipywidgets extension in the environment that runs the notebook server
    source activate && \
    jupyter nbextension install --py qgrid && \
    jupyter nbextension enable --py qgrid && \
    jupyter nbextension install --py widgetsnbextension --sys-prefix && \
    jupyter nbextension enable widgetsnbextension --py --sys-prefix && \
    jupyter serverextension enable --sys-prefix --py jupyter_videochat && \
    jupyter nbextension install --sys-prefix --symlink --overwrite --py pydeck && \
    jupyter nbextension enable --sys-prefix --py pydeck && \
    jupyter serverextension enable dask_labextension && \
    sudo mkdir -p /usr/local/etc/jupyter && sudo chown -R jovyan:users /usr/local/etc/jupyter && \
    ipcluster nbextension enable && \
    rm -fvR /home/jovyan/work/notebook-extensions && \
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    rm -rf /home/$NB_USER/.node-gyp

RUN \
    export NODE_OPTIONS=--max-old-space-size=4096 && \
    export DECKGL_SEMVER=`python -c "import pydeck; print(pydeck.frontend_semver.DECKGL_SEMVER)"` && \
    jupyter labextension install \
        '@kiteco/jupyterlab-kite' \
        '@jupyter-widgets/jupyterlab-manager' \
        'jupyterlab-plotly' \
        'plotlywidget' \
        '@jupyterlab/geojson-extension' \
        '@jupyter-widgets/jupyterlab-sidecar' \
        '@jupyterlab/debugger' \
        '@mamba-org/gator-lab' \
        'jupyterlab-spreadsheet' \
        'dask-labextension' \
        '@jupyter-widgets/jupyterlab-manager' \
        "@deck.gl/jupyter-widget@$DECKGL_SEMVER" \
        'keplergl-jupyter' \
        --no-build && \
    jupyter lab build --dev-build=False --minimize=False && \
    unset NODE_OPTIONS
